# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strict
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/user_agent_parser/all/user_agent_parser.rbi
#
# user_agent_parser-2.11.0

module UserAgentParser
  def self.parse(user_agent_string, options = nil); end
end
class UserAgentParser::Parser
  def device_from_pattern_match(pattern, match); end
  def first_pattern_match(patterns, value); end
  def from_pattern_match(keys, pattern, match); end
  def initialize(options = nil); end
  def interpolate(replacement, match); end
  def load_patterns(path); end
  def os_from_pattern_match(pattern, match); end
  def parse(user_agent); end
  def parse_device(user_agent); end
  def parse_os(user_agent); end
  def parse_ua(user_agent, os = nil, device = nil); end
  def patterns_path; end
  def user_agent_from_pattern_match(pattern, match, os = nil, device = nil); end
  def version_from_segments(*segments); end
end
class UserAgentParser::UserAgent
  def ==(other); end
  def device; end
  def eql?(other); end
  def family; end
  def initialize(family = nil, version = nil, os = nil, device = nil); end
  def inspect; end
  def name; end
  def os; end
  def to_h; end
  def to_s; end
  def version; end
end
class UserAgentParser::Version
  def <=>(other); end
  def eql?(other); end
  def initialize(*args); end
  def inspect; end
  def major; end
  def minor; end
  def patch; end
  def patch_minor; end
  def segments; end
  def to_h; end
  def to_s; end
  def version; end
  include Comparable
end
class UserAgentParser::OperatingSystem
  def ==(other); end
  def eql?(other); end
  def family; end
  def initialize(family = nil, version = nil); end
  def inspect; end
  def name; end
  def to_h; end
  def to_s; end
  def version; end
end
class UserAgentParser::Device
  def ==(other); end
  def brand; end
  def eql?(other); end
  def family; end
  def initialize(family = nil, model = nil, brand = nil); end
  def inspect; end
  def model; end
  def name; end
  def to_h; end
  def to_s; end
end
